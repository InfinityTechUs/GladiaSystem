@model GladiaSystem.Models.Product
@{
    ViewBag.Title = "Home";
    ViewBag.Selected = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<GladiaSystem.Models.Product> categoryQuant = ViewBag.CategoryQuant;
}

<div class="graphs">
    <div class="firt-graph" id="firt-graph">
        <p id="prod-ordered" class="prod-title">Produtos Cadastrados</p>
        <p id="number-ordered" class="ordered">@ViewBag.ProductNumber</p>
    </div>

    <div class="second-graph" id="second-graph">
    </div>

    <div class="third-graph" id="third-graph">
        <p id="prod-ordered" class="prod-title">Pedidos Feitos</p>
		<p id="number-ordered" class="ordered">@ViewBag.OrderedNumber</p>
    </div>

    <div class="fourth-graph">
        <p id="all-about" class="prod-title">Tudo sobre produtos</p>
        <a class="product-submit" href="@Url.Action("ProductList", "Home")">
            <img class="img-arrow" src="~/Content/Imagens/arrow.svg" alt="Seta">
        </a>
    </div>
</div>

<script>
	google.charts.load("current", { packages: ["corechart"] });

			// Draw the pie chart for Sarah's pizza when Charts is loaded.
			google.charts.setOnLoadCallback(drawAnthonyChart);

			// Callback that draws the pie chart for Anthony's pizza.
			function drawAnthonyChart() {
				// Create the data table for Anthony's pizza.
				var data = new google.visualization.DataTable();
				data.addColumn("string", "Topping");
				data.addColumn("number", "Slices");
				data.addRows([
					["Administrador", @ViewBag.AdministratorNumber],
					["Cliente", @ViewBag.ClientNumber],
				]);

				// Set options for Anthony's pie chart.
				var options = {
					title: "Usuários",
					width: 550,
					height: 327,
				};

				// Instantiate and draw the chart for Anthony's pizza.
				var chart = new google.visualization.PieChart(document.getElementById("second-graph"));
				chart.draw(data, options);
			}


</script>